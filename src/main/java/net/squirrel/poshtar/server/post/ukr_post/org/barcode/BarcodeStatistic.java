
/*
 * Copyright Â© 2016, Malyshev Vladislav,  thestrangesquirrel@gmail.com. This work is licensed under the Creative Commons Attribution-NonCommercial-NoDerivs 3.0 Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-nd/3.0/ or send a letter to Creative Commons, PO Box 1866, Mountain View, CA 94042, USA.
 */

package net.squirrel.poshtar.server.post.ukr_post.org.barcode;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "BarcodeStatistic", targetNamespace = "http://barcode.org/", wsdlLocation = "http://services.ukrposhta.ua/barcodestatistic/barcodestatistic.asmx?WSDL")
public class BarcodeStatistic
    extends Service
{

    private final static URL BARCODESTATISTIC_WSDL_LOCATION;
    private final static WebServiceException BARCODESTATISTIC_EXCEPTION;
    private final static QName BARCODESTATISTIC_QNAME = new QName("http://barcode.org/", "BarcodeStatistic");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://services.ukrposhta.ua/barcodestatistic/barcodestatistic.asmx?WSDL");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        BARCODESTATISTIC_WSDL_LOCATION = url;
        BARCODESTATISTIC_EXCEPTION = e;
    }

    public BarcodeStatistic() {
        super(__getWsdlLocation(), BARCODESTATISTIC_QNAME);
    }

    public BarcodeStatistic(WebServiceFeature... features) {
        super(__getWsdlLocation(), BARCODESTATISTIC_QNAME, features);
    }

    public BarcodeStatistic(URL wsdlLocation) {
        super(wsdlLocation, BARCODESTATISTIC_QNAME);
    }

    public BarcodeStatistic(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, BARCODESTATISTIC_QNAME, features);
    }

    public BarcodeStatistic(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public BarcodeStatistic(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns BarcodeStatisticSoap
     */
    @WebEndpoint(name = "BarcodeStatisticSoap")
    public BarcodeStatisticSoap getBarcodeStatisticSoap() {
        return super.getPort(new QName("http://barcode.org/", "BarcodeStatisticSoap"), BarcodeStatisticSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns BarcodeStatisticSoap
     */
    @WebEndpoint(name = "BarcodeStatisticSoap")
    public BarcodeStatisticSoap getBarcodeStatisticSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://barcode.org/", "BarcodeStatisticSoap"), BarcodeStatisticSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (BARCODESTATISTIC_EXCEPTION!= null) {
            throw BARCODESTATISTIC_EXCEPTION;
        }
        return BARCODESTATISTIC_WSDL_LOCATION;
    }

}
